"use strict";(self.webpackChunkdev_docs=self.webpackChunkdev_docs||[]).push([[950],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>k});var a=r(67294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,l=function(e,t){if(null==e)return{};var r,a,l={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var s=a.createContext({}),u=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,l=e.mdxType,n=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(r),c=l,k=d["".concat(s,".").concat(c)]||d[c]||m[c]||n;return r?a.createElement(k,i(i({ref:t},p),{},{components:r})):a.createElement(k,i({ref:t},p))}));function k(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var n=r.length,i=new Array(n);i[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:l,i[1]=o;for(var u=2;u<n;u++)i[u]=r[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},47509:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>n,metadata:()=>o,toc:()=>u});var a=r(87462),l=(r(67294),r(3905));const n={},i=void 0,o={unversionedId:"api-design/Database/Users",id:"api-design/Database/Users",title:"Users",description:"User model:",source:"@site/docs/api-design/Database/Users.md",sourceDirName:"api-design/Database",slug:"/api-design/Database/Users",permalink:"/api-design/Database/Users",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api-design/Database/Users.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Database Summary",permalink:"/api-design/Database/Summary"},next:{title:"Event Endpoint implemtation",permalink:"/api-design/Events/endpoints"}},s={},u=[{value:"User model:",id:"user-model",level:2},{value:"Relationships:",id:"relationships",level:3},{value:"Follow model:",id:"follow-model",level:2},{value:"Relationships:",id:"relationships-1",level:3},{value:"Profile model:",id:"profile-model",level:3},{value:"Relationships:",id:"relationships-2",level:3},{value:"User API endpoints:",id:"user-api-endpoints",level:2}],p={toc:u};function d(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"user-model"},"User model:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"id (primary key) string(uuid)"),(0,l.kt)("li",{parentName:"ul"},"username (string, unique)"),(0,l.kt)("li",{parentName:"ul"},"email (string, unique)"),(0,l.kt)("li",{parentName:"ul"},"password (string)"),(0,l.kt)("li",{parentName:"ul"},"first_name (string)"),(0,l.kt)("li",{parentName:"ul"},"last_name (string)"),(0,l.kt)("li",{parentName:"ul"},"avatar (image)"),(0,l.kt)("li",{parentName:"ul"},"bio (text)"),(0,l.kt)("li",{parentName:"ul"},"created_at (datetime)"),(0,l.kt)("li",{parentName:"ul"},"updated_at (datetime)")),(0,l.kt)("h3",{id:"relationships"},"Relationships:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"One-to-One with Profile model"),(0,l.kt)("li",{parentName:"ul"},"Many-to-Many with Follow model (as follower and followed)"),(0,l.kt)("li",{parentName:"ul"},"Many-to-Many with Place model (as liked by)"),(0,l.kt)("li",{parentName:"ul"},"Many-to-Many with Event model (as interested in)")),(0,l.kt)("h2",{id:"follow-model"},"Follow model:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"id (primary key)"),(0,l.kt)("li",{parentName:"ul"},"follower_id (foreign key to User model)"),(0,l.kt)("li",{parentName:"ul"},"followed_id (foreign key to User model)"),(0,l.kt)("li",{parentName:"ul"},"created_at (datetime)"),(0,l.kt)("li",{parentName:"ul"},"updated_at (datetime)")),(0,l.kt)("h3",{id:"relationships-1"},"Relationships:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Belongs to User model (as follower and followed)")),(0,l.kt)("h3",{id:"profile-model"},"Profile model:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"id (primary key)"),(0,l.kt)("li",{parentName:"ul"},"user_id (foreign key to User model)"),(0,l.kt)("li",{parentName:"ul"},"location (string)"),(0,l.kt)("li",{parentName:"ul"},"website (string)"),(0,l.kt)("li",{parentName:"ul"},"birthday (date)"),(0,l.kt)("li",{parentName:"ul"},"gender (string)"),(0,l.kt)("li",{parentName:"ul"},"interests (text)"),(0,l.kt)("li",{parentName:"ul"},"created_at (datetime)"),(0,l.kt)("li",{parentName:"ul"},"updated_at (datetime)")),(0,l.kt)("h3",{id:"relationships-2"},"Relationships:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Belongs to User model (One-to-One)")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-Mermaid"},"    graph TD;\n    User--\x3e|1:1|Profile;\n    User--\x3e|M:M|Follow;\n    Follow--\x3e|belongs to|User;\n    Profile--\x3e|belongs to|User;\n")),(0,l.kt)("h2",{id:"user-api-endpoints"},"User API endpoints:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"GET /users (list of users)"),(0,l.kt)("li",{parentName:"ul"},"GET /users/:id (user details)"),(0,l.kt)("li",{parentName:"ul"},"POST /users (create user)"),(0,l.kt)("li",{parentName:"ul"},"PUT /users/:id (update user)"),(0,l.kt)("li",{parentName:"ul"},"DELETE /users/:id (delete user)")))}d.isMDXComponent=!0}}]);