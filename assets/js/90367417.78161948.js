"use strict";(self.webpackChunkdev_docs=self.webpackChunkdev_docs||[]).push([[1214],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>y});var n=t(67294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function s(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?s(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=n.createContext({}),p=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},u=function(e){var r=p(e.components);return n.createElement(c.Provider,{value:r},e.children)},d="mdxType",l={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,s=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=p(t),f=i,y=d["".concat(c,".").concat(f)]||d[f]||l[f]||s;return t?n.createElement(y,a(a({ref:r},u),{},{components:t})):n.createElement(y,a({ref:r},u))}));function y(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var s=t.length,a=new Array(s);a[0]=f;var o={};for(var c in r)hasOwnProperty.call(r,c)&&(o[c]=r[c]);o.originalType=e,o[d]="string"==typeof e?e:i,a[1]=o;for(var p=2;p<s;p++)a[p]=t[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},12027:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var n=t(87462),i=(t(67294),t(3905));const s={},a="User",o={unversionedId:"api-design/User/endpoints",id:"api-design/User/endpoints",title:"User",description:"Endpoints",source:"@site/docs/api-design/User/endpoints.md",sourceDirName:"api-design/User",slug:"/api-design/User/endpoints",permalink:"/api-design/User/endpoints",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api-design/User/endpoints.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Ticket Model",permalink:"/api-design/Ticket/models"},next:{title:"User Model",permalink:"/api-design/User/models"}},c={},p=[{value:"Endpoints",id:"endpoints",level:2}],u={toc:p};function d(e){let{components:r,...t}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"user"},"User"),(0,i.kt)("h2",{id:"endpoints"},"Endpoints"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"- POST /api/users - Create a new user\n- GET /api/users/:id - Retrieve a specific user by ID\n- PUT /api/users/:id - Update an existing user by ID\n- DELETE /api/users/:id - Delete a user by ID\n- GET /api/users/:id/messages_sent - Retrieve a list of messages sent by a specific user by ID\n- GET /api/users/:id/messages_received - Retrieve a list of messages received by a specific user by ID\n- GET /api/users/:id/conversations - Retrieve a list of conversations a specific user is a participant in by ID\n- GET /api/users/:id/groups - Retrieve a list of groups a specific user is a member of by ID\n- GET /api/users/:id/voice_notes_sent - Retrieve a list of voice notes sent by a specific user by ID\n- GET /api/users/:id/voice_notes_received - Retrieve a list of voice notes received by a specific user by ID\n- GET /api/users/:id/notifications - Retrieve a list of notifications for a specific user by ID\n- GET /api/users/:id/bookings - Retrieve a list of bookings made by a specific user by ID\n- GET /api/users/:id/payments - Retrieve a list of payments made by a specific user by ID\n")))}d.isMDXComponent=!0}}]);