"use strict";(self.webpackChunkdev_docs=self.webpackChunkdev_docs||[]).push([[9538],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),d=a,f=c["".concat(s,".").concat(d)]||c[d]||m[d]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},61593:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const i={},o="Models Associated with Events",l={unversionedId:"api-design/Events/models",id:"api-design/Events/models",title:"Models Associated with Events",description:"Event",source:"@site/docs/api-design/Events/models.md",sourceDirName:"api-design/Events",slug:"/api-design/Events/models",permalink:"/api-design/Events/models",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api-design/Events/models.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Event Endpoint implemtation",permalink:"/api-design/Events/endpoints"},next:{title:"Facebook",permalink:"/api-design/Integrations/Facebook"}},s={},p=[{value:"Event",id:"event",level:2}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"models-associated-with-events"},"Models Associated with Events"),(0,a.kt)("h2",{id:"event"},"Event"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"id (integer, auto-increment)"),(0,a.kt)("li",{parentName:"ul"},"name (string)"),(0,a.kt)("li",{parentName:"ul"},"date (date)"),(0,a.kt)("li",{parentName:"ul"},"time (time)"),(0,a.kt)("li",{parentName:"ul"},"location (string)"),(0,a.kt)("li",{parentName:"ul"},"description (text)"),(0,a.kt)("li",{parentName:"ul"},"business_id (integer, foreign key)"),(0,a.kt)("li",{parentName:"ul"},"created_at (datetime)"),(0,a.kt)("li",{parentName:"ul"},"updated_at (datetime)")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"Relationships")),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"An event belongs to a business (one-to-many)"),(0,a.kt)("li",{parentName:"ul"},"An event can have multiple bookings (one-to-many)"),(0,a.kt)("li",{parentName:"ul"},"An event can have multiple ticket types (one-to-many)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'from sqlalchemy import Boolean, Column, ForeignKey, Integer, String, Text, DateTime, Date, Time\nfrom sqlalchemy.orm import relationship\nfrom sqlalchemy.sql import func\nfrom database import Base\n\n\n\n\n\nclass Event(Base):\n    __tablename__ = "event"\n    id = Column(Integer, primary_key=True, index=True)\n    name = Column(String, index=True)\n    date = Column(Date)\n    time = Column(Time)\n    location = Column(String)\n    description = Column(Text)\n    business_id = Column(Integer, ForeignKey("business.id"))\n    created_at = Column(DateTime, default=func.now())\n    updated_at = Column(DateTime, default=func.now(), onupdate=func.now())\n\n    business = relationship("Business", back_populates="events")\n    bookings = relationship("Booking", back_populates="event")\n    tickets = relationship("Ticket", back_populates="event")\n')))}c.isMDXComponent=!0}}]);